#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—à–∏–≤–∫–∏ –Ω–∞ ESP32

echo "=================================================="
echo "  –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏ –Ω–∞ ESP32 - –£–º–Ω—ã–µ –í–æ—Ä–æ—Ç–∞"
echo "=================================================="
echo ""

# –ü–æ–∏—Å–∫ ESP32 –ø–æ—Ä—Ç–∞
echo "üîç –ü–æ–∏—Å–∫ ESP32..."
ESP32_PORT=$(ls /dev/cu.* 2>/dev/null | grep -E "usbserial|SLAB_USBtoUART|wchusbserial" | head -1)

if [ -z "$ESP32_PORT" ]; then
    echo "‚ùå ESP32 –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω!"
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ—Ä—Ç—ã:"
    ls /dev/cu.* 2>/dev/null || echo "  –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤"
    echo ""
    echo "–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "  1. ESP32 –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ USB"
    echo "  2. –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥—Ä–∞–π–≤–µ—Ä (CH340 –∏–ª–∏ CP2102)"
    echo "  3. –ü—Ä–æ–±–ª–µ–º–∞ —Å USB –∫–∞–±–µ–ª–µ–º"
    echo ""
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥—Ä–∞–π–≤–µ—Ä–æ–≤:"
    echo "  CH340: brew install --cask wch-ch34x-usb-serial-driver"
    echo "  CP2102: https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers"
    exit 1
fi

echo "‚úì ESP32 –æ–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É: $ESP32_PORT"
echo ""

# –°–±–æ—Ä–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "‚öõÔ∏è  –°–±–æ—Ä–∫–∞ React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
cd smart-gate-frontend
npm run build
if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ React!"
    exit 1
fi
echo "‚úì React –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–±—Ä–∞–Ω–æ"
echo ""

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ data
echo "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ data/..."
cd ..
rm -rf data/*
cp -r smart-gate-frontend/build/* data/
rm -f data/asset-manifest.json data/robots.txt data/manifest.json data/favicon.ico data/logo*.png
rm -f data/static/css/*.map data/static/js/*.map data/static/js/*.LICENSE.txt
echo "‚úì –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
echo ""

# –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏ ESP32
echo "üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏ ESP32..."
platformio run

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏!"
    exit 1
fi

echo "‚úì –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
echo ""

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏
echo "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—à–∏–≤–∫–∏ –Ω–∞ ESP32..."
platformio run --target upload --upload-port $ESP32_PORT

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—à–∏–≤–∫–∏!"
    exit 1
fi
echo "‚úì –ü—Ä–æ—à–∏–≤–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
echo ""

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ SPIFFS
echo "üìÅ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ SPIFFS..."
platformio run --target uploadfs

if [ $? -ne 0 ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤!"
    exit 1
fi

echo ""
echo "=================================================="
echo "  ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "=================================================="
echo ""
echo "üì± –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:"
echo "  WiFi: SmartGate-Config"
echo "  –ü–∞—Ä–æ–ª—å: 12345678"
echo "  –ê–¥—Ä–µ—Å: http://smartgate.local"
echo "  –ò–ª–∏: http://192.168.4.1"
echo ""
echo "üìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤:"
echo "  platformio device monitor --port $ESP32_PORT --baud 115200"
echo ""
